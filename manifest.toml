#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "dodoc"
name = "Do.Doc"
description.en = "Designed to promote reflective processes during learning activities, do•doc is an open and modular tool facilitating documentation."
description.fr = "Conçu pour favoriser les processus réflexifs lors d’activités d’apprentissage, do•doc est un outil ouvert et modulaire facilitant la documentation."
version = "10.0.10~ynh1"
maintainers = ["gheleguen"]

[upstream]
license = "AGPL-3.0-only" # you can see the available licenses identifiers list here: https://spdx.org/licenses/
website = "https://dodoc.fr/"
admindoc = "https://forum.latelier-des-chercheurs.fr/t/installer-do-doc-en-ligne/210/127"
code = "https://github.com/l-atelier-des-chercheurs/dodoc.git"

[integration]
yunohost = ">= 11.2.30"
helpers_version = "2.1"
architectures = "all"
multi_instance = false
ldap = "?"
sso = true #Oui sur dodoc il y a des fonctions de comptes de connexions

disk = "25Go"
ram.build = "1Go" # A vérifier (pic de ram à l'installation)
ram.runtime = "1Go"

[install]
    [install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "domain"

    [install.path]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "path"
    default = "/dodoc"

    [install.init_main_permission]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # This won't be saved as setting and will instead be used to initialize the SSOwat permission
    type = "group"
    default = "visitors"

    [install.language]
    ask.en = "Choose the application language"
    ask.fr = "Choisissez la langue de l'application"
    type = "select"
    choices = ["fr", "en"]
    default = "fr"

    [install.admin]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "user"

    [install.password]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # Note that user-provided passwords questions are not automatically saved as setting
    help.en = "Use the help field to add an information for the admin about this question."
    help.fr = "Utilisez le champ aide pour ajouter une information à l'intention de l'administrateur à propos de cette question."
    type = "password"

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those

    [resources.sources]

    [resources.sources.main]
    # This will pre-fetch the asset which can then be deployed during the install/upgrade scripts with :
    #    ynh_setup_source --dest_dir="$install_dir"
    # You can also define other assets than "main" and add --source_id="foobar" in the previous command
    url = "https://github.com/l-atelier-des-chercheurs/dodoc/archive/refs/heads/main.zip"
    sha256 = "0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef"

    # These infos are used by https://github.com/YunoHost/apps/blob/master/tools/autoupdate_app_sources/autoupdate_app_sources.py
    # to auto-update the previous asset urls and sha256sum + manifest version
    # assuming the upstream's code repo is on github and relies on tags or releases
    # See the 'sources' resource documentation for more details

    # autoupdate.strategy = "latest_github_tag"

    [resources.system_user]
    # This will provision/deprovision a unix system user

    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir

    [resources.data_dir]
    # This will create/remove the data dir as /home/yunohost.app/$app
    # and store the corresponding setting $data_dir

    [resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    main.url = "/"

    [resources.ports]
    # This will pick a random port for reverse-proxying and store it as the $port setting

    [resources.apt]
    # This will automatically install/uninstall the following apt packages
    # and implicitly define the $phpversion setting as 8.0 (if phpX.Y-foobar dependencies are listed)
    packages = ["nginx", "nvm", "python2.7", "libx11-xcb1", "libxcomposite1", "libasound2", "libatk1.0-0", "libatk-bridge2.0-0", "libcairo2", "libcups2", "libdbus-1-3", "libexpat1", "libfontconfig1", "libgbm1", "libgcc1", "libglib2.0-0", "libgtk-3-0", "libnspr4", "libpango-1.0-0", "libpangocairo-1.0-0", "libstdc++6", "libx11-6", "libx11-xcb1", "libxcb1", "libxcomposite1", "libxcursor1", "libxdamage1", "libxext6", "libxfixes3", "libxi6", "libxrandr2", "libxrender1", "libxss1", "libxtst6"]

    [resources.database]
    # This will automatically provision/deprovison a MySQL DB and store the corresponding credentials in settings $db_user, $db_name, $db_pwd
    type = "mysql"
